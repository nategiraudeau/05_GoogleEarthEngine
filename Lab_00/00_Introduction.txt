

# Google Earth Engine Introduction

## Why Google Earth? 

* Add intro to Google Earth Engine
* Ease of getting started 
* Modularized code blocks 
* Compute on Cloud 
* Extensive datasets available

## Understanding Google Earth Engine

* How it works 
* Connect data with functions 

## Getting Started

* Setting Up account 
* Code Editor
  * https://developers.google.com/earth-engine/guides/playground?hl=en
* Documentation Resources
* Searching for Data
* Tutorials
* Videos from GEE conference 

## How to Use Google Earth Engine

* Using the code blocks
* Modifying the code blocks
* Understanding the Data structures  
* Looking at attribute information
* Incorporating your google drive or cloud account 
* Importing feature collections from outside GEE 
* Where to go to learn more 



Follow along with the code below to begin building your own dataset. creating the visual parameters is optional, but useful way of customizing. 

```javascript
// Load the image from the archive.
var image = ee.Image('LANDSAT/LC08/C01/T1/LC08_044034_20140318');
// Define visualization parameters in an object literal.
var vizParams = {bands: 
                 ['B5', 'B4', 'B3'], 
                 min: 5000, max: 15000, gamma: 1.3};
// Center the map on the image and display.
Map.centerObject(image, 9);
Map.addLayer(image, vizParams, 'Landsat 8 false color');
```



Features work in a similar way - here, we import a list of counties from the TIGER dataset and visualize them on top of the previous raster image we imported. 

```javascript
var counties = ee.FeatureCollection('TIGER/2016/Counties');
Map.addLayer(counties, {}, 'counties');
```